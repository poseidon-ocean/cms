<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
  http://www.springframework.org/schema/beans/spring-beans.xsd  
  http://www.springframework.org/schema/aop   
  http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
  http://www.springframework.org/schema/tx   
  http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
  http://www.springframework.org/schema/context   
  http://www.springframework.org/schema/context/spring-context-4.0.xsd
  http://www.springframework.org/schema/util   
  http://www.springframework.org/schema/util/spring-util-4.0.xsd
  " >

	<!--
		@Compoment这类型注解的类都是需要被扫描
		说白就是：让Spring的ApplicationContext去加载和初始化所有加了注解的类，给实例化
		@Repository:数据层的dao
		@Service:service就是service
		@Controller:web比如：action和springmvc-controller类
	 -->
	<!-- 扫描文件所在dao包 -->
	<context:component-scan base-package="com.lt.dao"></context:component-scan>
	<context:component-scan base-package="com.lt.service"></context:component-scan>
	<context:component-scan base-package="com.lt.web"></context:component-scan>
	<context:component-scan base-package="com.lt.core.interceptor"></context:component-scan>
	
	<!-- 连接数据  dbcp,c3p0 proxy 连接池,就获取连接对象 为什么要用连接池-->
	<context:property-placeholder location="classpath:db.properties" />
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<!-- 设置JDBC驱动名称 -->
		<property name="driverClass" value="${jdbc.driver}" />
		<!-- 设置JDBC连接URL -->
		<property name="jdbcUrl" value="${jdbc.url}" />
		<!-- 设置数据库用户名 -->
		<property name="user" value="${jdbc.username}" />
		<!-- 设置数据库密码 -->
		<property name="password" value="${jdbc.password}" />
		<!-- 设置连接池初始值 -->
	</bean>
	
	<!-- 配置Hibernate -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		 <!-- 获取数据源 -->
		 <property name="dataSource" ref="dataSource"></property>
		 <property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		 </property>
		 <!-- 获取实体目录 -->
		 <property name="packagesToScan" value="com.lt.bean"></property>
		 <property name="hibernateProperties">
		 	<props>
		 		<!-- 数据库的断言 -->
		 		<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
		 		<!-- 显示sql -->
		 		<prop key="hibernate.show_sql">true</prop>
		 		<!-- 格式化sql -->
		 		<prop key="hibernate.format_sql">true</prop>
		 		<!-- 自动映射表 -->
		 		<prop key="hibernate.hbm2ddl.auto">update</prop>
		 	</props>
		 </property>
	</bean>
	
	<!-- 事务管理 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />  
    </bean>  
    
    <!-- 加载注解的事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>

</beans>
